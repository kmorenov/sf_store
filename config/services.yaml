# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'en'
    uploads_directory: '%kernel.project_dir%/public/images/products'

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: false       # Allows optimizing the container by removing unused services; this also means
                            # fetching services directly from the container via $container->get() won't work.
                            # The best practice is to be explicit about your dependencies anyway.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']


    App\EventListener\OrderListener:
        tags:
            - { name: kernel.event_listener, event: order.persist, method: onOrderPersist, priority: 20}

    App\Service\CartManager:
        public: true

    admin.product:
        class: App\Admin\ProductAdmin
        arguments: [~, App\Entity\Product, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Product, group: Admin }
        public: true

    admin.category:
        class: App\Admin\CategoryAdmin
        arguments: [~, App\Entity\Category, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Category, group: Admin }
        public: true

    admin.product_image:
        class: App\Admin\ProductImageAdmin
        arguments: [~, App\Entity\ProductImage, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Product Image, group: Admin }
        public: true

    admin.orders:
        class: App\Admin\OrderAdmin
        arguments: [~, App\Entity\Orders, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Order, group: Admin }
        public: true